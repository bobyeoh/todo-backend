// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/column": {
            "get": {
                "description": "Get All Columns",
                "tags": [
                    "Column"
                ],
                "summary": "Get All Columns",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.GetColumns"
                        }
                    },
                    "500": {
                        "description": "UnknownError",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    }
                }
            }
        },
        "/task": {
            "post": {
                "description": "Create task",
                "tags": [
                    "Task"
                ],
                "summary": "Create task",
                "parameters": [
                    {
                        "description": "name and column_id",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.TaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Task"
                        }
                    },
                    "400": {
                        "description": "TheColumnDoesNotExist",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    },
                    "403": {
                        "description": "PermissionDenied",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    },
                    "404": {
                        "description": "TheTaskDoesNotExist",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "UnknownError",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    }
                }
            }
        },
        "/task/{column_id}": {
            "get": {
                "description": "Get tasks by column id",
                "tags": [
                    "Task"
                ],
                "summary": "Get tasks by column id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Column ID",
                        "name": "column_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.GetTasks"
                        }
                    },
                    "500": {
                        "description": "UnknownError",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    }
                }
            }
        },
        "/task/{id}": {
            "put": {
                "description": "Update Task",
                "tags": [
                    "Task"
                ],
                "summary": "Update Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "name and column_id",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.TaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "TheColumnDoesNotExist",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    },
                    "403": {
                        "description": "PermissionDenied",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    },
                    "404": {
                        "description": "TheTaskDoesNotExist",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "UnknownError",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Task",
                "tags": [
                    "Task"
                ],
                "summary": "Delete Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "403": {
                        "description": "PermissionDenied",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    },
                    "404": {
                        "description": "TheTaskDoesNotExist",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "UnknownError",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Login",
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Name and password",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Login"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    },
                    "401": {
                        "description": "InvalidCredentials",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "UnknownError",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorCode"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "description": "Logout",
                "tags": [
                    "User"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {}
                }
            }
        }
    },
    "definitions": {
        "requests.LoginRequest": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "bob"
                },
                "password": {
                    "type": "string",
                    "example": "11111111"
                }
            }
        },
        "requests.TaskRequest": {
            "type": "object",
            "required": [
                "column_id",
                "name"
            ],
            "properties": {
                "column_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "task1"
                }
            }
        },
        "responses.Column": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "responses.GetColumns": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Column"
                    }
                }
            }
        },
        "responses.GetTasks": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Task"
                    }
                }
            }
        },
        "responses.Login": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "responses.Task": {
            "type": "object",
            "properties": {
                "column_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "utils.ErrorCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
